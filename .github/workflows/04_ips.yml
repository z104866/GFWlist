name: 04_定时解析 GFWList 域名到 IP（严格IP验证版）

on:
  schedule:
    - cron: '30 20 * * *'  # UTC 20:30 = 北京时间 04:30
  workflow_dispatch:

jobs:
  resolve-gfwlist:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        
      - name: 安装 DNS 解析工具
        run: |
          sudo apt-get update
          sudo apt-get install -y dnsutils
          if [ $? -ne 0 ]; then
            echo "错误：工具安装失败"
            exit 1
          fi
          
      - name: 检查域名文件是否存在
        run: |
          if [ ! -f gfwlist_domains.txt ]; then
            echo "错误：未找到 gfwlist_domains.txt，请先提取域名和IP"
            exit 1
          fi
          domain_count=$(wc -l gfwlist_domains.txt | awk '{print $1}')
          echo "找到 $domain_count 个待解析条目"
          
      - name: 解析域名获取 IP 地址
        run: |
          > gfwlist_ips.txt
          > dns_responses.txt  # 记录原始DNS响应，用于调试
          dns_servers=("8.8.8.8" "8.8.4.4" "1.1.1.1" "1.0.0.1" "9.9.9.9" "149.112.112.112" "84.200.69.80" "8.20.247.20")
          success_count=0
          fail_count=0
          
          echo "开始解析，使用 DNS 服务器: ${dns_servers[*]}"
          
          line_num=0
          while IFS= read -r entry; do
            line_num=$((line_num+1))
            if [ -z "$entry" ]; then 
              echo "行 $line_num: 空行，跳过"
              continue 
            fi
            
            # 处理IP地址
            if [[ $entry =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
              echo "$entry" >> gfwlist_ips.txt
              echo "行 $line_num: ✓ 直接添加 IP: $entry"
              ((success_count++))
              continue
            fi
            
            # 域名解析
            echo -n "行 $line_num: 解析域名 $entry..."
            ips=""
            resolved=false
            all_responses=""
            
            # 尝试所有DNS服务器，记录原始响应
            for dns in "${dns_servers[@]}"; do
              response=$(dig +short +time=5 +tries=3 @$dns "$entry" A 2>&1)
              all_responses="$all_responses\n--- DNS: $dns ---\n$response"
              
              # 从响应中提取IP（仅保留IPv4）
              ip=$(echo "$response" | grep -E '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$' | head -n 1)
              if [ -n "$ip" ]; then
                ips="$ip"
                resolved=true
                break
              fi
            done
            
            # 记录原始响应到文件
            echo -e "$all_responses" >> dns_responses.txt
            
            if [ "$resolved" = true ]; then
              # 写入有效IP
              echo "$ips" >> gfwlist_ips.txt
              echo " 成功 ($ips)"
              ((success_count++))
            else
              # 解析失败，显示原始响应（前200字符）
              short_response=$(echo "$all_responses" | head -c 200 | sed 's/\n/ /g')
              echo " 失败（解析出无效IP: $short_response...）"
              ((fail_count++))
            fi
            
            sleep 1  # 控制解析频率
          done < gfwlist_domains.txt
          
          # 去重排序
          echo "==== 去重排序 IP ===="
          if [ -s gfwlist_ips.txt ]; then
            sort -u gfwlist_ips.txt > temp.txt && mv temp.txt gfwlist_ips.txt
            final_ip_count=$(wc -l gfwlist_ips.txt)
            echo "解析完成："
            echo "  成功解析: $success_count 个域名"
            echo "  解析失败: $fail_count 个域名"
            echo "  最终IP数量: $final_ip_count 个"
          else
            echo "警告：IP文件为空"
            touch gfwlist_ips.txt
            final_ip_count=0
          fi
          
      - name: 验证结果文件
        run: |
          if [ ! -f gfwlist_ips.txt ]; then
            echo "错误：未生成IP文件"
            exit 1
          fi
          
          ip_count=$(wc -l gfwlist_ips.txt)
          echo "IP文件包含 $ip_count 个有效IP，每行一个"
          
          # 显示前10个IP
          if [ $ip_count -gt 0 ]; then
            echo "==== 前10个IP ===="
            head -n 10 gfwlist_ips.txt
          else
            echo "警告：IP文件为空"
          fi
          
      - name: 查看DNS响应（调试用）
        run: |
          if [ -s dns_responses.txt ]; then
            echo "==== 前5条DNS响应 ===="
            head -n 10 dns_responses.txt
          else
            echo "DNS响应日志为空"
          fi
          
      - name: 提交结果文件
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add gfwlist_ips.txt dns_responses.txt  # 提交响应日志用于调试
          if git diff --staged --quiet; then
            echo "没有新内容更新"
          else
            commit_msg="更新 GFWList IP 列表: $(date +'%Y-%m-%d %H:%M')"
            git commit -m "$commit_msg"
            git push || { echo "推送失败，解析已完成" && exit 0; }
          fi
