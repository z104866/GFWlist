name: 自动下载并处理 GFWList

on:
  schedule:
    - cron: '0 12 * * *'  # UTC 12:00 = 北京时间 20:00
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  process-gfwlist:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码仓库
        uses: actions/checkout@v4
        
      - name: 下载 GFWList 文件
        run: |
          wget -q https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt -O gfwlist.txt
          echo "成功下载 GFWList 文件，路径：$(pwd)/gfwlist.txt"
          
      - name: 安装依赖工具
        run: |
          sudo apt-get update
          sudo apt-get install -y jq  # 用于 JSON 处理（此处备用）
          echo "依赖工具安装完成"
          
      - name: Base64 解码并提取 IP 地址
        run: |
          # 解码 Base64 内容
          decoded_content=$(base64 -d gfwlist.txt)
          
          # 提取 IP 地址和 CIDR 网段（正则匹配）
          echo "$decoded_content" | grep -E -o "(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\/[0-9]{1,2})?" | sort -u > ip_list.txt
          
          # 统计提取结果
          ip_count=$(wc -l ip_list.txt | awk '{print $1}')
          echo "成功提取 $ip_count 个 IP 地址/段，保存至 ip_list.txt"
          
      - name: 查看生成文件内容（调试用）
        run: |
          echo "==== gfwlist.txt 解码后部分内容 ===="
          head -n 20 gfwlist.txt | base64 -d
          echo "==== ip_list.txt 前 10 条 IP ===="
          head -n 10 ip_list.txt
          
      - name: 提交并推送更新
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # 添加文件到暂存区
          git add gfwlist.txt ip_list.txt
          
          # 检查是否有变更
          if git diff --staged --quiet; then
            echo "没有新的 IP 地址更新，跳过提交"
          else
            # 提交并推送
            commit_msg="更新 GFWList IP 列表: $(date +'%Y-%m-%d %H:%M')"
            git commit -m "$commit_msg"
            git push
            echo "已推送更新：$commit_msg"
          fi
